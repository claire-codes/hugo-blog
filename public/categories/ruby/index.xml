<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Claire Parker-Jones Blog</title>
    <link>http://example.org/categories/ruby/</link>
    <description>Recent content in Ruby on Claire Parker-Jones Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 08 Mar 2016 19:54:26 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Changing Jekyll&#39;s Permalink</title>
      <link>http://example.org/blog/2016-03-08-changing-jekylls-permalink/</link>
      <pubDate>Tue, 08 Mar 2016 19:54:26 +0000</pubDate>
      
      <guid>http://example.org/blog/2016-03-08-changing-jekylls-permalink/</guid>
      <description>Let&amp;rsquo;s change the permalink format for your Jekyll blog.
ðŸ”— What? In your Jekyll blog, a permalink is the name for the URL that points directly to a specific blog post. It&amp;rsquo;s a permanent link to a page.
ðŸ”— Why? Jekyll uses a really ugly, verbose permalink format by default which includes the date and category of the post:
/:categories/:year/:month/:day/:title.html  Which in the live site for this post would become:</description>
    </item>
    
    <item>
      <title>Scheduling Ruby and JavaScript jobs with Heroku</title>
      <link>http://example.org/blog/2016-01-06-scheduling-ruby-and-javascript-jobs-with-heroku/</link>
      <pubDate>Wed, 06 Jan 2016 21:37:32 +0000</pubDate>
      
      <guid>http://example.org/blog/2016-01-06-scheduling-ruby-and-javascript-jobs-with-heroku/</guid>
      <description>Need to do a job regularly in your app? If it&amp;rsquo;s on Heroku then there&amp;rsquo;s a free add-on that can run the job for you. It&amp;rsquo;s imaginatively called Heroku Scheduler. Here&amp;rsquo;s how I set up Ruby and JavaScript jobs ready to be scheduled.
Create your app. From the root directory, initialise git and create a Heroku app. I like to use the Heroku toolbelt for all my Heroku command line needs.</description>
    </item>
    
    <item>
      <title>Paths in Ruby</title>
      <link>http://example.org/blog/2016-01-01-paths-in-ruby/</link>
      <pubDate>Fri, 01 Jan 2016 14:30:01 +0000</pubDate>
      
      <guid>http://example.org/blog/2016-01-01-paths-in-ruby/</guid>
      <description>You&amp;rsquo;ve got a file, but where does it live? Which directory are you in? Where am I? What&amp;rsquo;s my name?
For the following examples, imagine:
 you&amp;rsquo;re executing a file called foo.rb which lives in the file system at /Users/me/myDir/foo.rb you&amp;rsquo;re located in /Users/me/myDir you&amp;rsquo;ve executed the command ruby foo.rb from the terminal  Remember:
 absolute path - the full path of the file in the file system: it starts with the root directory and includes all the directories between it and the file in question.</description>
    </item>
    
    <item>
      <title>Deploying Jekyll on Heroku</title>
      <link>http://example.org/blog/2015-09-20-deploying-jekyll-on-heroku/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0100</pubDate>
      
      <guid>http://example.org/blog/2015-09-20-deploying-jekyll-on-heroku/</guid>
      <description>How I deployed my Jekyll blog to Heroku step-by-step If you use Jekyll for your blog you&amp;rsquo;ll see that their docs suggest hosting your app on GitHub pages. However, I wanted to host mine on Heroku because - well, just because I could really. I&amp;rsquo;d used Heroku previously and I knew I wouldn&amp;rsquo;t be restricted in my choice of plug-ins further down the line. Alas, I didn&amp;rsquo;t find a single clear tutorial for setting it up: even the example linked on the Jekyll site didn&amp;rsquo;t run for me!</description>
    </item>
    
    <item>
      <title>Scraping Sites That Use Ajax</title>
      <link>http://example.org/blog/2015-09-04-scraping-websites-that-use-ajax/</link>
      <pubDate>Sat, 05 Sep 2015 16:08:43 +0100</pubDate>
      
      <guid>http://example.org/blog/2015-09-04-scraping-websites-that-use-ajax/</guid>
      <description>Or, where&amp;rsquo;s the rest of my HTML?? TL;DR  If the website you&#39;re scraping uses Ajax to load content, open-uri and Nokogiri won&#39;t cut it Use Watir WebDriver (+ PhantomJS) instead   I recently wanted to do a one-off web-scrape of a single page to get the hrefs of the 100+ &amp;lt;a&amp;gt; tags within it. A cursory google suggested Nokogiri and open-uri would do the trick, so off I went:</description>
    </item>
    
  </channel>
</rss>