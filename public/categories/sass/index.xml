<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sass on Claire Parker-Jones Blog</title>
    <link>http://example.org/categories/sass/</link>
    <description>Recent content in Sass on Claire Parker-Jones Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 19 Mar 2018 20:54:03 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/categories/sass/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reasons not to use IDs in CSS</title>
      <link>http://example.org/blog/2018-03-19-reasons-not-to-use-ids-in-css/</link>
      <pubDate>Mon, 19 Mar 2018 20:54:03 +0000</pubDate>
      
      <guid>http://example.org/blog/2018-03-19-reasons-not-to-use-ids-in-css/</guid>
      <description>Sometimes when I’m reviewing code, I advise a colleague not to use IDs for CSS styles, and inevitably get asked why. Like standing in queues, making a cup of tea or applying a full face of makeup in the dark at 6am, avoiding IDs in CSS is something I do without thinking. It takes me a minute before I can explain to other people why I do it. So with that in mind, here’s a list of reasons I avoid using IDs in my stylesheets, and prefer classes instead.</description>
    </item>
    
    <item>
      <title>Styling inline code tags</title>
      <link>http://example.org/blog/2018-03-16-styling-inline-code-tags/</link>
      <pubDate>Fri, 16 Mar 2018 08:58:21 +0000</pubDate>
      
      <guid>http://example.org/blog/2018-03-16-styling-inline-code-tags/</guid>
      <description>I like writing tech-related blog posts (you’re reading one right now!). My posts often contain the &amp;lt;code&amp;gt; tag as I illustrate code examples. The default browser style for this tag can be pretty dull, typically using the system monospace font and a beige background colour. I&amp;rsquo;ve added my own custom style to this tag. This is a step-by-step explanation of it, as I&amp;rsquo;d rather do that than watch some drivel on Netflix today.</description>
    </item>
    
    <item>
      <title>Multiline comments in Sass</title>
      <link>http://example.org/blog/2017-11-21-multiline-comments-in-sass/</link>
      <pubDate>Tue, 21 Nov 2017 21:35:19 +0000</pubDate>
      
      <guid>http://example.org/blog/2017-11-21-multiline-comments-in-sass/</guid>
      <description>Note: These rules are specifically for sass-lint, because that&amp;rsquo;s my linter of choice. However, equivalent rules will (probably) exist for other linters such as styelint or csslint. (provide links)
If you lint your Sass code using an automated tool like sass-lint, you might have encountered the rule: no-css-comments. Depending on the severity level in your linter config, this will trigger an error or a warning when it encounters comments like this /* I am a CSS style comment */.</description>
    </item>
    
  </channel>
</rss>